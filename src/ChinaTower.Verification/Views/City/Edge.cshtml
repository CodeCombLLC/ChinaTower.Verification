@model City
@{ 
    ViewBag.Title = "编辑城市边界 - " + Model.Id;
}

<div id="allmap">
</div>
<div id="re-edge">
    <i class="fa fa-map-marker"></i>
</div>
<div id="re-edge-cancel">
    <i class="fa fa-undo"></i>
</div>

<!-- Modal -->
<div class="modal fade" id="modalSave" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <form class="modal-content" asp-action="Edge" asp-controller="City" asp-route-id="@Model.Id" method="post" id="frmSaveEdge">
            <input type="hidden" name="edge" id="edge" />
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">编辑城市边界</h4>
            </div>
            <div class="modal-body">
                <p>您确定要使用新的边界作为@(Model.Id)的边界规则吗？</p>
            </div>
            <div class="modal-footer">
                <button id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                <button id="btnSubmit" type="button" class="btn btn-primary">保存</button>
            </div>
        </form>
    </div>
</div>

<script>
    var map = new BMap.Map("allmap", { enableMapClick: false });
    map.addControl(new BMap.MapTypeControl());
    var icon = new BMap.Icon("/images/start_pos.png", new BMap.Size(20, 20));

    var leftClick = function(e){
        if (editing) {
            edge.push({ X: e.point.lng, Y: e.point.lat, Type: 'Baidu' });
            if (startPending) {
                startPending = false;
                var point = { lng:e.point.lng, lat:e.point.lat };
                var marker = new BMap.Marker(point, { icon: icon });
                marker.addEventListener('rightclick', function () {
                    $('#modalSave').modal('show');
                });
                drawing.push(marker);
                map.addOverlay(marker);
            } else {
                if (edge.length > 1) {
                    var polylinePoints = [new BMap.Point(edge[edge.length - 2].X, edge[edge.length - 2].Y), new BMap.Point(edge[edge.length - 1].X, edge[edge.length - 1].Y)];
                    var polyline = new BMap.Polyline(polylinePoints, {strokeColor:'green', strokeWeight:5, strokeOpacity:1});
                    drawing.push(polyline);
                    map.addOverlay(polyline);
                }
            }
        }
    };

    $.getJSON('@(new HtmlString(Url.Action("Gps", "City", new { city = Model.Id, address = Model.Id })))', {}, function (data) { 
        map.centerAndZoom(new BMap.Point(data.Lon, data.Lat), 17);
        map.enableScrollWheelZoom(true);
        var current_edge = @(new HtmlString(Model.EdgeJson));
        var points = [];
        for (var i = 0; i < current_edge.length; i++)
            points.push(new BMap.Point(current_edge[i].X, current_edge[i].Y));
        var polyline = new BMap.Polyline(points, { strokeColor:'blue', strokeWeight:5, strokeOpacity:1 });
        map.addOverlay(polyline);
    });

    resizeMap();

    function resizeMap()
    {
        $('#allmap').outerHeight($(window).height() - $('.header').outerHeight() - $('.wrapper h3').outerHeight() - $('.site-footer').outerHeight() - 20);
        $('#allmap').outerWidth($('.wrapper').outerWidth());
    }

    $(window).resize(function(){ resizeMap(); });

    
    var editing = false;
    var startPending = true;
    var edge = [];
    var drawing = [];
    $('#re-edge').click(function(){
        $('#re-edge').hide();
        $('#re-edge-cancel').show();
        startPending = true;
        editing = true;
        edge = [];
        map.addEventListener("click", leftClick);
    });
    $('#re-edge-cancel').click(function(){
        $('#re-edge').show();
        $('#re-edge-cancel').hide();
        editing = false;
        startPending = true;
        edge = [];
        for(var i = 0; i < drawing.length; i++)
            map.removeOverlay(drawing[i]);
        drawing = [];
        map.removeEventListener('click', leftclick);
    });
    $('#btnCancel').click(function(){
        $('#re-edge').show();
        $('#re-edge-cancel').hide();
        editing = false;
        startPending = true;
        edge = [];
        for(var i = 0; i < drawing.length; i++)
            map.removeOverlay(drawing[i]);
        drawing = [];
        map.removeEventListener('click', leftclick);
    });

    $('#btnSubmit').click(function () {
        $('#edge').val(JSON.stringify(edge));
        $('#frmSaveEdge').submit();
    });
</script>